#!/bin/bash -efu

# these paths cant vary
schemaspath="/usr/share/glib-2.0/schemas/"
profileuser="/etc/dconf/profile/user"

processfile() # ($1) takes 1 parameter [ name of the file ]
{
    IFS=' ' # Internal Field Separator
    if [[ $1 != ca.desrt.dconf-editor ]]; then # this file contains
        currentschema="$schemaspath$1.gschema.xml"
        settings="/etc/dconf/db/local.d/$1"
        settingslocks="/etc/dconf/db/local.d/locks/$1"
        # create files
        echo -n "" > "$settings"
        echo -n "" > "$settingslocks"

        if [[ -f $currentschema ]]; then # for case of simple .xml files
            for path in $(xmllint --xpath '//schemalist/schema/@path' "$currentschema" 2>/dev/null | sed -n 's/path="\/\|"//gp'); do
                echo "Processing: [${path%?}]"
                echo "[${path%?}]" >> "$settings"

                names=($(xmllint --xpath "//schemalist/schema[@path=\"/$path\"]/key/@name" "$currentschema" 2>/dev/null | sed -n 's/name="\|"/ /gp'))
                # remove [ lists ] by replacing them on ~
                # substitute ? instead of spaces for correct transfer of 'strings with spaces'
                values=($(xmllint --nocdata --xpath "//schemalist/schema[@path=\"/$path\"]/key/default" "$currentschema" 2>/dev/null | \
                sed -n 's/\[[^<]*\]/~/g; s/ /\?/g; s/<default[^>]*>\|<\/default>/ /gp'))

                for (( j=0; j < ${#values[*]}; j++ )); do
                    if [[ ${values[$j]} != "~" ]] && \
                       [[ ${values[$j]} != "nothing" ]]; then # dconf doesnt know this value
                        valueJ=$(sed -n 's/\?/ /g; p' <<< "${values[$j]}" )
                        echo "${names[$j]}=$valueJ" >> "$settings"
                        echo "/$path${names[$j]}" >> "$settingslocks"
                    fi
                done
            done
        fi
    fi
}
# end processfile --- --- --- --- ---

lock() # ($1 $2 $3) takes 3 parameters [ type of lock: all, list ] [ argc ] [ argv ]
{
    # anyway create this
    mkdir -p /etc/dconf/db/local.d/locks
    echo -e "user-db:user\nsystem-db:local" > "$profileuser"
    if [[ $1 == "all" ]]; then
        for file in "$schemaspath"/* ; do
            processfile "${file%.gschema.xml}"
        done
    elif [[ $1 == "list" ]]; then
        local argc=$(( 2 + $2 )) # magic number 2: 1 - type of lock ; 2 - argc
        local argv=("$@")
        for ((arg=3; arg < argc; arg++)); do # magic number 3:  0 - type of lock ; 1 - argc; 2 - "-ll"; 3 - first file...
             processfile "${argv[$arg]%.gschema.xml}"
        done
    fi

    dconf update
    echo "Dconf locked successfully!"
    exit 0
}
# end lock --- --- --- --- ---

unlock() # ($1 $2 $3) takes 3 parameters [ type of lock: all, list ] [ argc ] [ argv ]
{
    basepath=/etc/dconf/db/local.d

    if [[ $1 == "all" ]]; then
        for file in "$basepath"/* ; do
            rm -rf "${basepath:?}/$file" "${basepath}/locks/$file"
        done
    elif [[ $1 == "list" ]]; then
        local argc=$(( 2 + $2 )) # magic number 2: 1 - type of lock ; 2 - argc
        local argv=("$@")
        for ((i=3; i < argc; i++)); do # magic number 3:  0 - type of lock ; 1 - argc; 2 - "-ll"; 3 - first file...
            rm -f "$basepath/${argv[$i]%.gschema.xml}" "$basepath/locks/${argv[$i]%.gschema.xml}"
        done
    fi

    # Total clean
    if ! [[ -d /etc/dconf/db/local.d/locks/ ]]; then # test if directory exists [if it's empty - it's useless]
        rm -f $profileuser /etc/dconf/db/local
        rm -rf /etc/dconf/db/local.d
    fi

    dconf update
    echo "Dconf unlocked!"
    exit 0
}
# end unlock --- --- --- --- ---
